version: '3.8'

services:
  django-frontend:
    env_file:
      - django-frontend/.env
    container_name: django-frontend
    build:
      context: ./django-frontend
    image: django-frontend:latest
    volumes:
      - ./django-frontend:/app
    ports:
      - "8000:8000"
    networks:
      - transcendence-network
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_started

  api-gateway:
    env_file:
      - drf-api-gateway/.env
    container_name: api-gateway
    build:
      context: ./drf-api-gateway
    image: drf-api-gateway:latest
    volumes:
      - ./drf-api-gateway:/app
    ports:
      - "3000:3000"
    networks:
      - transcendence-network
    depends_on:
      database:
        condition: service_healthy

  api-users:
    env_file:
      - drf-api-users/.env
    container_name: api-users
    build:
      context: ./drf-api-users
    image: drf-api-users:latest
    volumes:
      - ./drf-api-users:/app
    ports:
      - "3001:3001"
    networks:
      - transcendence-network
    depends_on:
      database:
        condition: service_healthy

  api-game:
    env_file:
      - drf-api-game/.env
    container_name: api-game
    build:
      context: ./drf-api-game
    image: drf-api-game:latest
    volumes:
      - ./drf-api-game:/app
    ports:
      - "3002:3002"
    networks:
      - transcendence-network
    depends_on:
      database:
        condition: service_healthy

  api-auth:
    env_file:
      - drf-api-auth/.env
    container_name: api-auth
    build:
      context: ./drf-api-auth
    image: drf-api-auth:latest
    volumes:
      - ./drf-api-auth:/app
    ports:
      - "3003:3003"
    networks:
      - transcendence-network
    depends_on:
      database:
        condition: service_healthy

  webserver:
    container_name: webserver
    build:
      context: ./webserver
    image: webserver:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./webserver/app:/app
      - ./webserver/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - transcendence-network
    depends_on:
      - django-frontend
      - api-gateway

  redis:
    container_name: redis
    build:
      context: ./redis
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - transcendence-network

  database:
    env_file:
      - postgres/.env
    container_name: database
    build:
      context: ./postgres
    image: database:latest
    volumes:
      - ./postgres/postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - transcendence-network
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres --dbname=api_users_db"]
        interval: 10s
        timeout: 5s
        retries: 5

networks:
  transcendence-network:
    driver: bridge
